---
title: Editing feature layers
description: This sample demonstrates a bare-bones approach for passing edits to a feature service.
layout: example.hbs
---

<!-- Load Esri Leaflet Renderers -->
<script src="https://unpkg.com/esri-leaflet-renderers@2.0.6"></script>

<!-- Leaflet Draw -->
<style>
  #info-pane {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 400;
    padding: 1em;
    background: white;
    text-align: right;
    max-width: 250px;
  }

  #form {
    display: none;
  }
</style>

<div id="map"></div>
<div id="info-pane" class="leaflet-bar">
  <label>
    Click on the map to post an edit.<br>
    Click on a marker to remove it.
    <select id="symbols">
      <option value="Air Control Point">Air Control Point</option>
      <option value="Decision Point">Decision Point</option>
      <option value="Unmanned Aerial System (UAS UA)">Unmanned Aerial System (UAS UA)</option>
    </select>
  </label>
</div>

<script>
  // create the map
  var map = L.map('map').setView([65, -18.5], 6);
  L.esri.basemapLayer('Physical').addTo(map);

  // add our feature layer to the map
  const militaryOps = L.esri.featureLayer({
    url: 'https://sampleserver6.arcgisonline.com/arcgis/rest/services/Military/FeatureServer/3'
  }).addTo(map);

  var symbols = document.querySelector('#symbols');

  // when the map is clicked, add a new feature
  map.on('click', function (e) {
    // convert to GeoJSON
    const feat = L.marker(e.latlng).toGeoJSON();
    // set the attribute value that controls the feature service symbology
    feat.properties.symbolname = symbols.value;
    // make a request to add the new feature to the feature service.
    militaryOps.addFeature(feat, function (err, response) {
      if (err) {
        return;
      }

      console.log(response);
    });
  });

  // when a marker is clicked, remove the feature from the service, using its id
  militaryOps.on('click', function (e) {
    militaryOps.deleteFeature(e.layer.feature.id, function (err, response) {
      if (err) {
        return;
      }

      console.log(response);
    });
    // make sure map click event isn't fired.
    L.DomEvent.stopPropagation(e);
  });
</script>
