---
title: Non-mercator projection
description: Using non mercator tiles with <code>L.esri.TiledMapLayer</code> with the <a href="https://github.com/kartena/Proj4Leaflet">Proj4Leaflet</a> plugin. <br><br> <strong>This demo should be implemented at your own risk. Esri Leaflet only supports tiles that have been published in Web Mercator Auxiliary Sphere tiling scheme (WKID 102100/3857). Strong knowledge of projections, spatial references and tiling schemes is required for this.</strong>
layout: example.hbs
---

<!-- Include Proj4JS via rawgit.com
in production you'd be better off hosting these libraries yourself -->
<script src="https://rawgit.com/proj4js/proj4js/2.3.12/dist/proj4-src.js"></script>
<script src="https://rawgit.com/kartena/Proj4Leaflet/1.0.0-beta.1/src/proj4leaflet.js"></script>

<!-- Load shapeMarkers from CDN -->
<script src="https://cdn.jsdelivr.net/leaflet.shapemarkers/1.0.4/leaflet-shape-markers.js"></script>

<div id="map"></div>

<script>
  /* create new Proj4Leaflet CRS:
  1. Proj4 and WKT definitions can be found at sites like http://epsg.io, http://spatialreference.org/ or by using gdalsrsinfo http://www.gdal.org/gdalsrsinfo.html
  2. Appropriate values to supply to the resolution and origin constructor options can be found in the ArcGIS Server RESTful tile server endpoint (ex: http://mapserv.utah.gov/arcgis/rest/services/BaseMaps/Terrain/MapServer)
  3. The numeric code within the first parameter (ex: `26912`) will be used to project the dynamic map layer on the fly
  */
  var crs = new L.Proj.CRS('EPSG:27700', '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 +units=m +no_defs', {
    origin: [-5782271.75658968, 5469787.26875647],
    resolutions: [
      132.291931250529,
      119.062738125476,
      105.833545000423,
      52.9167725002117,
      26.4583862501058,
      19.8437896875794,
      13.2291931250529,
      5.29167725002117,
      2.64583862501058,
      1.32291931250529,
      0.661459656252646,
      0.330729828126323,
      0.132291931250529,
      0.0661459656252646,
      0.0264583862501058
    ]
  });

  var map = L.map('map', {
    crs: crs
  }).setView([52.9548, -1.1581], 4);

  // The min/maxZoom values provided should match the actual cache thats been published. This information can be retrieved from the service endpoint directly.
  L.esri.tiledMapLayer({
    url: 'http://webmaps.nottinghamcity.gov.uk/ArcGIS/rest/services/basemap/Greyscale/MapServer',
    maxZoom: 14,
    minZoom: 0,
    continuousWorld: true,
    attribution: 'City of Nottingham'
  }).addTo(map);

  // feature layers will be requested in WGS84 (4326) and reprojected on the client
  var hospitals = L.esri.featureLayer({
    url: 'http://webmaps.nottinghamcity.gov.uk/ArcGIS/rest/services/Health_and_Social_Care/external_health_msd/MapServer/7',
    pointToLayer (geojson, latlng) {
      return L.shapeMarkers.crossMarker(latlng, 25, {
        color: 'red',
        weight: 6
      })
    }
  }).addTo(map);
</script>
